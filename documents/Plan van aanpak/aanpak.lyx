#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language dutch
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
Inleiding
\end_layout

\begin_layout Standard
In dit hoofdstuk zullen we de aanpak en planning van het project bespreken.
 Allereerst zullen we uiteenzetten wat onze werkwijze zal zijn en hoe we
 onze tijd zullen verdelen over de deliverables, welke hulpmiddelen we hiervoor
 zullen gaan gebruiken, en de mogelijke uitdagingen die we hierbij voorzien.
 Ten tweede zullen wij de technieken bespreken die we in alle waarschijnlijkheid
 zullen gaan gebruiken.
 Vervolgens gaan we in op de geplande werkzaamheden en tot slot zullen we
 onze beoogde planning bespreken.
\end_layout

\begin_layout Subsection
Methodiek
\end_layout

\begin_layout Subsubsection
Ontwikkelmethode
\end_layout

\begin_layout Standard
Tijdens de bacheloropleiding Technische Informatica zijn verscheidene softwareon
twikkelmethoden behandelt.
 Elk heeft zo z'n voor- en nadelen, maar Agile methoden zoals Scrum zijn
 vaak uitermate geschikt voor relatief korte projecten met een klein team,
 en hier zullen we dan ook gebruik van maken, en wel om de volgende redenen.
 Scrum maakt gebruik van korte ontwikkelcycli - ook wel sprints genoemd
 - die in tijdsduur varieren van slecht één week tot een maand.
 Aan het begin van elke sprint wordt een planning gemaakt van wat er in
 die sprint moet gebeuren, en aan het eind van de sprint zal er een werkend
 product zijn.
 Aangezien ons project slechts tien weken loopt, en wij hiervan acht weken
 full-time er aan werken, zullen we sprints hanteren met een duur van één
 week.
 Zoals Scrum voorschrijft zullen we aan het begin van de week plannen welke
 taken we zullen uitvoeren, en aan het eind van elke week zullen we een
 werkend systeem hebben.
\end_layout

\begin_layout Standard
Scrum is vanwege zijn korte ontwikkelsprints uitermate geschikt voor ons
 project specifiek, gezien de aard van ons project.
 Hoewel onze ontwikkeling zal starten met alleen de library, zal al snel
 de ontwikkeling van de game en de library parallel lopen.
 Juist door de library te gebruiken in de game komen we er achter op welke
 vlakken er nog functionaliteit ontbreekt, en kunnen we de library zo nodig
 aanpassen.
 Ook zullen we aan het einde van elke sprint documenteren wat onze bevindingen
 van die week zijn, zodat deze informatie gebruikt kan worden in het technologie
rapport.
 Juist door deze documentatie bij te houden zorgen we ervoor dat elk facet
 van het ontwikkelen met WebRTC naar voren komt.
\end_layout

\begin_layout Standard
Het is belangrijk dat we elke week de documentatie nauwgezet bijwerken.
 Een ervaren probleem kan snel vergeten worden als het niet op tijd wordt
 opgeschreven, waarbij deze waardevolle kennis verloren gaat en niet meer
 in het technologierapport zal komen.
 Daarnaast moeten we zorgen dan we de library en de game goed gescheiden
 houden, en dat we de juiste selectie maken van welke functionaliteit in
 de library of in de game thuis hoort.
\end_layout

\begin_layout Subsubsection
Tools
\end_layout

\begin_layout Standard
Voor het beheer van onze code zullen we gebruik maken van het Git versiecontrole
systeem.
 Hoewel standaard alle code op Github publiek inzichtelijk is, hebben we
 voor dit project bij Github een privé repository aangevraagd.
 Dit betekent dat wij zelf kunnen bepalen wie wel en wie niet inzicht heeft
 in onze code, omdat het nog niet bekend is of de code uiteindelijk wel
 of niet publiekelijk beschikbaar mag zijn.
\end_layout

\begin_layout Standard
We zullen niet rechtstreeks in JavaScript programmeren maar in plaats hiervan
 de taal CoffeeScript gebruiken.
 CoffeeScript is een taal die qua syntax veel lijkt op Ruby, en die door
 een compiler omgezet wordt in equivalente JavaScript code.
 De voordelen van CoffeeScript zijn talrijk, maar het grootste voordeel
 is toch wel dat CoffeeScript een volledig Object Oriented taal is, in tegenstel
ling tot JavaScripts soms ietwat onhandige prototype systeem.
\end_layout

\begin_layout Subsection
Technieken
\end_layout

\begin_layout Standard
Bij dit project zullen we gebruik maken van de nieuwste technieken op het
 gebied van het Web.
 Allereerst staat natuurlijk WebRTC centraal, en stelt ons in staat om een
 peer-to-peer verbinding te leggen tussen twee browsers.
 WebRTC wordt in browsers geïmplementeerd als een API in JavaScript, en
 van deze taal zullen we dan ook veel gebruik maken (al is het via CoffeeScript,
 zie hierboven).
 Naast WebRTC zullen we gebruik maken van technieken die ons in staat stellen
 verschillende sensoren van mobiele devices uit te lezen.
 Ook maken we gebruik van andere nieuwe technieken binnen het Web.
 Zo zullen we WebSockets gebruiken tussen browser en server voor de totstandkomi
ng van de daadwerlijke WebRTC connectie, en zullen we naar alle waarschijnlijkhe
id een computer graphics implementatie in HTML5 gebruiken - denk aan Canvas
 of WebGL - in de game die we ontwikkelen.
 Naast onze bevindingen met WebRTC zullen we ook bevindingen op de andere
 vlakken documenteren, zodat deze kennis niet verloren gaat.
\end_layout

\begin_layout Subsection
Planning
\end_layout

\begin_layout Subsubsection*
Week 1 - 24 juni t/m 30 juni
\end_layout

\begin_layout Standard
Library
\end_layout

\begin_layout Subsubsection*
Week 2 - 1 juli t/m 7 juli
\end_layout

\begin_layout Standard
Library
\end_layout

\begin_layout Subsubsection*
Week 3 - 8 juli t/m 14 juli: Sprint 1
\end_layout

\begin_layout Standard
Game + library
\end_layout

\begin_layout Subsubsection*
Week 4 - 15 juli t/m 21 juli: Sprint 2
\end_layout

\begin_layout Standard
Game + library
\end_layout

\begin_layout Subsubsection*
Week 5 - 22 juli t/m 28 juli: Sprint 3
\end_layout

\begin_layout Standard
Game + library
\end_layout

\begin_layout Subsubsection*
Week 6 - 29 t/m 4 augustus: Sprint 4
\end_layout

\begin_layout Standard
Game + library
\end_layout

\begin_layout Subsubsection*
Week 7 - 5 augustus t/m 11 agustus: Sprint 5
\end_layout

\begin_layout Standard
Game + library
\end_layout

\begin_layout Subsubsection*
Week 8 - 12 augustus t/m 18 augustus: Sprint 6
\end_layout

\begin_layout Standard
Game
\end_layout

\begin_layout Subsubsection*
Week 9 - 19 augustus t/m 25 augustus: Sprint 7
\end_layout

\begin_layout Standard
Game
\end_layout

\begin_layout Subsubsection*
Week 10 - 26 augustus t/m 1 september
\end_layout

\begin_layout Standard
Afronden verslagen
\end_layout

\end_body
\end_document
